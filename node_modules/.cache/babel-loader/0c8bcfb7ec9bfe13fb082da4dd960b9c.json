{"ast":null,"code":"var _jsxFileName = \"/Users/williamfirmino/Desktop/todo_app/todo_app/src/components/Lista/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { TodoContext } from '../../contexts/TodoContext';\nimport * as S from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    todo,\n    removeTodo,\n    checkTodo\n  } = _ref;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const log = message => {\n    console.log(message);\n  };\n\n  const onDragStart = e => {\n    console.log('> CArd: start dragging');\n    setIsDragging(true);\n  };\n\n  const onDragEnd = e => {\n    log('card: stop dragging');\n    setIsDragging(false);\n  }; // DropZone Card\n\n\n  const onDragEnter = e => {\n    log('dropzone: Enter in zone!');\n  };\n\n  const onDragOver = e => {\n    log('dropzone: Over');\n  };\n\n  const onDragLeave = e => {\n    log('dropzone: leave');\n  };\n\n  const onDragDrop = e => {\n    log('dropzone: dropped');\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.WrapperItem, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    onDragEnter: onDragEnter,\n    onDragOver: onDragOver,\n    onDragLeave: onDragLeave,\n    onDrop: onDragDrop,\n    isDragging: isDragging,\n    draggable: true,\n    children: [/*#__PURE__*/_jsxDEV(S.ButtonAndText, {\n      children: [/*#__PURE__*/_jsxDEV(S.ButtonCheck, {\n        checked: todo.done,\n        type: \"checkbox\",\n        onChange: () => checkTodo(todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.ListItem, {\n        completed: todo.done,\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n      onClick: () => removeTodo(todo),\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(S.Close, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Item, \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\");\n\n_c = Item;\n\nconst Lista = () => {\n  _s2();\n\n  const [option, setOption] = useState(0);\n  const {\n    todos,\n    actived,\n    removeTodo,\n    completed,\n    checkTodo,\n    clearCompleted\n  } = useContext(TodoContext);\n\n  const Data = _ref2 => {\n    let {\n      list\n    } = _ref2;\n    return list.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      todo: item,\n      checkTodo: checkTodo,\n      removeTodo: removeTodo\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.ListOrdered, {\n      children: [option === 0 && /*#__PURE__*/_jsxDEV(Data, {\n        list: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 30\n      }, this), option === 1 && /*#__PURE__*/_jsxDEV(Data, {\n        list: actived\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 30\n      }, this), option === 2 && /*#__PURE__*/_jsxDEV(Data, {\n        list: completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(S.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [actived.length, \" items left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(S.Center, {\n          children: [/*#__PURE__*/_jsxDEV(S.Button, {\n            selected: option === 0,\n            type: \"button\",\n            onClick: () => setOption(0),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n            selected: option === 1,\n            type: \"button\",\n            onClick: () => setOption(1),\n            children: \"Actived\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n            selected: option === 2,\n            type: \"button\",\n            onClick: () => setOption(2),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => clearCompleted(),\n          children: \"Clear Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(S.FooterMobile, {\n      children: [/*#__PURE__*/_jsxDEV(S.Button, {\n        selected: option === 0,\n        type: \"button\",\n        onClick: () => setOption(0),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        selected: option === 1,\n        type: \"button\",\n        onClick: () => setOption(1),\n        children: \"Actived\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        selected: option === 2,\n        type: \"button\",\n        onClick: () => setOption(2),\n        children: \"Completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Lista, \"gjKc6JuRorQAwITLSyWjSKPQjIs=\");\n\n_c2 = Lista;\nexport default Lista;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Lista\");","map":{"version":3,"sources":["/Users/williamfirmino/Desktop/todo_app/todo_app/src/components/Lista/index.js"],"names":["React","useContext","useState","TodoContext","S","Item","todo","removeTodo","checkTodo","isDragging","setIsDragging","log","message","console","onDragStart","e","onDragEnd","onDragEnter","onDragOver","onDragLeave","onDragDrop","done","text","Lista","option","setOption","todos","actived","completed","clearCompleted","Data","list","map","item","id","length","cursor"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { TodoContext } from '../../contexts/TodoContext';\nimport * as S from './style'\n\nconst Item = ({todo, removeTodo, checkTodo}) => {\n    const [isDragging, setIsDragging] = useState(false)\n\n    const log = message => {\n        console.log(message)\n    }\n\n    const onDragStart = e => {\n        console.log('> CArd: start dragging')\n        setIsDragging(true)\n    }\n\n    const onDragEnd = e => {\n        log('card: stop dragging')\n        setIsDragging(false)\n    }\n\n    // DropZone Card\n    const onDragEnter = e => {\n        log('dropzone: Enter in zone!')\n    }\n\n    const onDragOver = e => {\n        log('dropzone: Over')\n    }\n\n    const onDragLeave = e => {\n        log('dropzone: leave')\n    }\n\n    const onDragDrop = e => {\n        log('dropzone: dropped')\n    }\n    return(\n        <S.WrapperItem \n            onDragStart={onDragStart}\n            onDragEnd={onDragEnd}\n            onDragEnter={onDragEnter}\n            onDragOver={onDragOver}\n            onDragLeave={onDragLeave}\n            onDrop={onDragDrop}\n            isDragging={isDragging}\n            draggable={true}>\n            <S.ButtonAndText>\n                <S.ButtonCheck checked={todo.done} type='checkbox' onChange={() => checkTodo(todo)}/>\n                <S.ListItem completed={todo.done}>{todo.text}</S.ListItem>   \n            </S.ButtonAndText>\n            <S.Button onClick={() => removeTodo(todo)} type=\"button\">\n                <S.Close />\n            </S.Button>\n        </S.WrapperItem>\n    )\n}\n\nconst Lista = () => {\n    const [ option, setOption ] = useState(0)\n    const { todos, actived, removeTodo, completed, checkTodo, clearCompleted } = useContext(TodoContext)\n\n    const Data = ({list}) => list.map(item => (\n        <Item key={item.id} todo={item} checkTodo={checkTodo} removeTodo={removeTodo} />\n    ))   \n    \n  return (\n    <>\n        <S.ListOrdered>\n            {option === 0 && <Data list={todos}/>}\n            {option === 1 && <Data list={actived}/>}\n            {option === 2 && <Data list={completed}/>}\n            <S.Footer>\n                <span>{actived.length} items left</span>\n                <S.Center>\n                    <S.Button selected={option === 0} type='button' onClick={() => setOption(0)}>All</S.Button>\n                    <S.Button selected={option === 1} type='button' onClick={() => setOption(1)}>Actived</S.Button>\n                    <S.Button selected={option === 2} type='button' onClick={() => setOption(2)}>Completed</S.Button>\n                </S.Center>\n                <span style={{ cursor: 'pointer'}} onClick={() => clearCompleted()}>\n                    Clear Completed\n                </span>\n            </S.Footer>\n        </S.ListOrdered>\n        <S.FooterMobile>\n            <S.Button selected={option === 0} type='button' onClick={() => setOption(0)}>All</S.Button>\n            <S.Button selected={option === 1} type='button' onClick={() => setOption(1)}>Actived</S.Button>\n            <S.Button selected={option === 2} type='button' onClick={() => setOption(2)}>Completo</S.Button>\n        </S.FooterMobile>\n    </>\n);\n};\n\nexport default Lista;\n"]},"metadata":{},"sourceType":"module"}