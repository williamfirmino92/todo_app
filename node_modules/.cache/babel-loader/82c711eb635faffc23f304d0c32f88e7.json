{"ast":null,"code":"var _jsxFileName = \"/Users/williamfirmino/Desktop/todo_app/todo_app/src/contexts/ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { dark, light } from '../Style/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst CustomThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(() => {\n    const storageValue = localStorage.getItem('theme');\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    } else {\n      return light;\n    }\n  });\n  const toggleTheme = useCallback(() => {\n    return setTheme(theme.title === 'light' ? dark : light);\n  }, [theme]);\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(theme));\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      toggleTheme,\n      theme\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomThemeProvider, \"tgZVF0BDyqxhQNeiEQ+sE6OwFPQ=\");\n\n_c = CustomThemeProvider;\nexport default CustomThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomThemeProvider\");","map":{"version":3,"sources":["/Users/williamfirmino/Desktop/todo_app/todo_app/src/contexts/ThemeContext.js"],"names":["createContext","useCallback","useEffect","useState","ThemeProvider","dark","light","ThemeContext","CustomThemeProvider","children","theme","setTheme","storageValue","localStorage","getItem","JSON","parse","toggleTheme","title","setItem","stringify"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,gBAA5B;;AAEA,OAAO,MAAMC,YAAY,gBAAGP,aAAa,EAAlC;;AAEP,MAAMQ,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAM;AACrC,UAAMS,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;;AAEA,QAAIF,YAAJ,EAAkB;AACd,aAAOG,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAP;AACH,KAFD,MAEO;AACH,aAAON,KAAP;AACH;AACJ,GARiC,CAAlC;AAUA,QAAMW,WAAW,GAAGhB,WAAW,CAAC,MAAM;AAClC,WAAOU,QAAQ,CAACD,KAAK,CAACQ,KAAN,KAAgB,OAAhB,GAA0Bb,IAA1B,GAAiCC,KAAlC,CAAf;AACH,GAF8B,EAE5B,CAACI,KAAD,CAF4B,CAA/B;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAF;AAAeP,MAAAA;AAAf,KAA9B;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,KAAtB;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMD,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import { createContext, useCallback, useEffect, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { dark, light } from '../Style/theme'\n\nexport const ThemeContext = createContext()\n\nconst CustomThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState(() => {\n        const storageValue = localStorage.getItem('theme')\n\n        if (storageValue) {\n            return JSON.parse(storageValue)\n        } else {\n            return light\n        }\n    })\n\n    const toggleTheme = useCallback(() => {\n        return setTheme(theme.title === 'light' ? dark : light)\n    }, [theme])\n\n    useEffect(() => {\n        localStorage.setItem('theme', JSON.stringify(theme))\n    }, [theme])\n\n    return(\n        <ThemeContext.Provider value={{ toggleTheme, theme}}>\n            <ThemeProvider theme={theme}>\n                {children}\n            </ThemeProvider>\n        </ThemeContext.Provider>\n    )\n}\n\nexport default CustomThemeProvider"]},"metadata":{},"sourceType":"module"}