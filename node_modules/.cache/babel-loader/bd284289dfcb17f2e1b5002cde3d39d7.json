{"ast":null,"code":"var _jsxFileName = \"/Users/williamfirmino/Desktop/todo_app/todo_app/src/contexts/TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/createContext();\n\nconst TodoProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: 'Estudar react',\n    done: false\n  }, {\n    id: 2,\n    text: 'Estudar ing',\n    done: true\n  }, {\n    id: 3,\n    text: \"Fazer o que é bom\",\n    done: false\n  }]);\n\n  const saveNewTodo = todo => {\n    const newTodo = {\n      id: todos.length + 1,\n      text: todo,\n      done: false\n    };\n\n    if (newTodo.text.length > 0) {\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const removeTodo = todo => {\n    setTodos(todos.filter(item => item !== todo));\n  };\n\n  const checkTodo = todo => {\n    const mapped = todos.map(item => item.id === todo.id ? { ...item,\n      done: !todo.done\n    } : { ...item\n    });\n    setTodos(mapped);\n  };\n\n  const actived = todos.filter(item => item.done !== true);\n  const completed = todos.filter(item => item.done !== false);\n\n  const clearCompleted = () => setTodos(actived);\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todos,\n      saveNewTodo,\n      removeTodo,\n      actived,\n      completed,\n      clearCompleted,\n      checkTodo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoProvider, \"yx8CtDs1f4ZXjq7QZexxuHkgFkA=\");\n\n_c = TodoProvider;\nexport default TodoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/williamfirmino/Desktop/todo_app/todo_app/src/contexts/TodoContext.js"],"names":["React","useState","createContext","TodoContext","TodoProvider","children","todos","setTodos","id","text","done","saveNewTodo","todo","newTodo","length","removeTodo","filter","item","checkTodo","mapped","map","actived","completed","clearCompleted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AAEP,MAAME,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAC/B;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAD+B,EAE/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,aAAf;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GAF+B,EAG/B;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,mBAAf;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GAH+B,CAAD,CAAlC;;AAMA,QAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,UAAMC,OAAO,GAAG;AACdL,MAAAA,EAAE,EAAEF,KAAK,CAACQ,MAAN,GAAe,CADL;AAEdL,MAAAA,IAAI,EAAEG,IAFQ;AAGdF,MAAAA,IAAI,EAAE;AAHQ,KAAhB;;AAKA,QAAIG,OAAO,CAACJ,IAAR,CAAaK,MAAb,GAAsB,CAA1B,EAA6B;AACzBP,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWO,OAAX,CAAD,CAAR;AACH;AACJ,GATD;;AAWA,QAAME,UAAU,GAAGH,IAAI,IAAI;AACvBL,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKL,IAA9B,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMM,SAAS,GAAGN,IAAI,IAAI;AACtB,UAAMO,MAAM,GAAGb,KAAK,CAACc,GAAN,CAAUH,IAAI,IACzBA,IAAI,CAACT,EAAL,KAAYI,IAAI,CAACJ,EAAjB,GAAsB,EAAE,GAAGS,IAAL;AAAWP,MAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AAAvB,KAAtB,GAAqD,EAAC,GAAGO;AAAJ,KAD1C,CAAf;AAIAV,IAAAA,QAAQ,CAACY,MAAD,CAAR;AACH,GAND;;AAQA,QAAME,OAAO,GAAGf,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,IAAL,KAAc,IAAnC,CAAhB;AAEA,QAAMY,SAAS,GAAGhB,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,IAAL,KAAc,KAAnC,CAAlB;;AAEA,QAAMa,cAAc,GAAG,MAAMhB,QAAQ,CAACc,OAAD,CAArC;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACDf,MAAAA,KADC;AAEDK,MAAAA,WAFC;AAGDI,MAAAA,UAHC;AAIDM,MAAAA,OAJC;AAKDC,MAAAA,SALC;AAMDC,MAAAA,cANC;AAODL,MAAAA;AAPC,KAA7B;AAAA,cASKb;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjDD;;GAAMD,Y;;KAAAA,Y;AAmDN,eAAeA,YAAf","sourcesContent":["import React, { useState, createContext } from 'react'\n\nexport const TodoContext = createContext();\n\nconst TodoProvider = ({children}) => {\n    const [todos, setTodos] = useState([\n        { id: 1, text: 'Estudar react', done: false},\n        { id: 2, text: 'Estudar ing', done: true},\n        { id: 3, text: \"Fazer o que é bom\",done: false}\n    ])\n\n    const saveNewTodo = todo => {\n        const newTodo = {\n          id: todos.length + 1,\n          text: todo,\n          done: false\n        }\n        if (newTodo.text.length > 0) {\n            setTodos([...todos, newTodo])\n        }\n    }\n\n    const removeTodo = todo => {\n        setTodos(todos.filter(item => item !== todo))\n    }\n\n    const checkTodo = todo => {\n        const mapped = todos.map(item => \n            item.id === todo.id ? { ...item, done: !todo.done} : {...item}    \n        )\n\n        setTodos(mapped)\n    }\n\n    const actived = todos.filter(item => item.done !== true)\n\n    const completed = todos.filter(item => item.done !== false)\n\n    const clearCompleted = () => setTodos(actived)\n\n    return (\n        <TodoContext.Provider value={{ \n                                    todos, \n                                    saveNewTodo, \n                                    removeTodo, \n                                    actived, \n                                    completed,\n                                    clearCompleted,\n                                    checkTodo\n                                    }}>\n            {children}\n        </TodoContext.Provider>\n    )\n}\n\nexport default TodoProvider"]},"metadata":{},"sourceType":"module"}